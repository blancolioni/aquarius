class
   Normandy.Json.Cube_Declaration

inherit
   Normandy.Json.Serializable

feature

    To_Json : Aqua.Text.Json.Value
         local
               Object : Aqua.Text.Json.Object
         do
               Object.Put_String ("name", Cube_Name)
               Object.Put_String ("description", Cube_Description)
               Object.Put ("dimensions", Dimensions)
               Object.Put ("measures", Measures)
               Object.Put ("invariants", Invariants)
               Object.Put ("sources", Sources)
               Result := Object
         end

   Cube_Name : String
   Cube_Description : String

   Dimensions : Aqua.Text.Json.Array
   Measures   : Aqua.Text.Json.Array
   Invariants : Aqua.Text.Json.Array
   Sources    : Aqua.Text.Json.Array

    After_Cube_Name (Child : Normandy.Json.Cube_Name)
        do
            Cube_Name := Child.Concatenated_Image
        end

    After_String (Text : String)
        do
            Cube_Description := Text.Slice (2, Text.Length - 1) -- Remove quotes
        end


      After_Cube_Property (Child : Normandy.Json.Cube_Property)
         do
            if Child.Is_Dimension then
                Dimensions.Put (Child.To_Json)
            elsif Child.Is_Invariant then
                Invariants.Put (Child.To_Json)
            elsif Child.Is_Measure then
                Measures.Put (Child.To_Json)
            elsif Child.Is_Source then
                Sources.Put (Child.To_Json)
            end
         end

end
